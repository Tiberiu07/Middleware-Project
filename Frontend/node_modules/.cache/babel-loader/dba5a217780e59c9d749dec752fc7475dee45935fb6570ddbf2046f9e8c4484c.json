{"ast":null,"code":"var _jsxFileName = \"/Users/tiberiugutu/Desktop/Winter Semester Files/Middleware Project/Frontend/src/components/MoviesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [newMovieTitle, setNewMovieTitle] = useState('');\n  useEffect(() => {\n    // Fetch movies when the component mounts\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    try {\n      const response = await axios.get('http://localhost:8055/api/v1/movies');\n      setMovies(response.data);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n  const handleInputChange = event => {\n    setNewMovieTitle(event.target.value);\n  };\n  const handleAddMovie = async () => {\n    try {\n      await axios.post('http://localhost:8055/api/v1/movies', {\n        movieTitle: newMovieTitle\n      });\n      // Clear the input field and fetch the updated movie list\n      setNewMovieTitle('');\n      fetchMovies();\n    } catch (error) {\n      console.error('Error adding movie:', error);\n    }\n  };\n  const handleEditMovie = async (id, updatedTitle) => {\n    try {\n      await axios.put(`http://localhost:8055/api/v1/movies/${id}`, {\n        movieTitle: updatedTitle\n      });\n      // Fetch the updated movie list\n      fetchMovies();\n    } catch (error) {\n      console.error('Error updating movie:', error);\n    }\n  };\n  const handleDeleteMovie = async id => {\n    try {\n      await axios.delete(`http://localhost:8055/api/v1/movies/${id}`);\n      // Fetch the updated movie list\n      fetchMovies();\n    } catch (error) {\n      console.error('Error deleting movie:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [movie.movieTitle, movie, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditMovie(movie.id, prompt('Enter new title:', movie.movieTitle)),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteMovie(movie.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMovieTitle,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddMovie,\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieList, \"pXV4GJg+mNPFKzm+xyd3VRRpWqY=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","newMovieTitle","setNewMovieTitle","fetchMovies","response","get","data","error","console","handleInputChange","event","target","value","handleAddMovie","post","movieTitle","handleEditMovie","id","updatedTitle","put","handleDeleteMovie","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","onClick","prompt","type","onChange","_c","$RefreshReg$"],"sources":["/Users/tiberiugutu/Desktop/Winter Semester Files/Middleware Project/Frontend/src/components/MoviesList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst MovieList = () => {\n    const [movies, setMovies] = useState([]);\n    const [newMovieTitle, setNewMovieTitle] = useState('');\n\n    useEffect(() => {\n        // Fetch movies when the component mounts\n        fetchMovies();\n    }, []);\n\n    const fetchMovies = async () => {\n        try {\n            const response = await axios.get('http://localhost:8055/api/v1/movies');\n            setMovies(response.data);\n        } catch (error) {\n            console.error('Error fetching movies:', error);\n        }\n    };\n\n    const handleInputChange = (event) => {\n        setNewMovieTitle(event.target.value);\n    };\n\n    const handleAddMovie = async () => {\n        try {\n            await axios.post('http://localhost:8055/api/v1/movies', { movieTitle: newMovieTitle });\n            // Clear the input field and fetch the updated movie list\n            setNewMovieTitle('');\n            fetchMovies();\n        } catch (error) {\n            console.error('Error adding movie:', error);\n        }\n    };\n\n    const handleEditMovie = async (id, updatedTitle) => {\n        try {\n            await axios.put(`http://localhost:8055/api/v1/movies/${id}`, { movieTitle: updatedTitle });\n            // Fetch the updated movie list\n            fetchMovies();\n        } catch (error) {\n            console.error('Error updating movie:', error);\n        }\n    };\n\n    const handleDeleteMovie = async (id) => {\n        try {\n            await axios.delete(`http://localhost:8055/api/v1/movies/${id}`);\n            // Fetch the updated movie list\n            fetchMovies();\n        } catch (error) {\n            console.error('Error deleting movie:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Movies</h2>\n            <ul>\n                {movies.map((movie) => (\n                    <li key={movie.id}>\n                        {movie.movieTitle}\n                        {movie}\n                        <button onClick={() => handleEditMovie(movie.id, prompt('Enter new title:', movie.movieTitle))}>\n                            Edit\n                        </button>\n                        <button onClick={() => handleDeleteMovie(movie.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n            <div>\n                <input type=\"text\" value={newMovieTitle} onChange={handleInputChange} />\n                <button onClick={handleAddMovie}>Add Movie</button>\n            </div>\n        </div>\n    );\n};\n\nexport default MovieList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}