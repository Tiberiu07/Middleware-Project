{"ast":null,"code":"var _jsxFileName = \"/Users/tiberiugutu/Desktop/Winter Semester Files/Middleware Project/Frontend/src/components/MoviesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [newMovieTitle, setNewMovieTitle] = useState('');\n  useEffect(() => {\n    // Fetch movies when the component mounts\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('http://localhost:8055/api/v1/movies');\n      const data = await response.json();\n      setMovies(data);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n  const handleInputChange = event => {\n    setNewMovieTitle(event.target.value);\n  };\n  const handleAddMovie = async () => {\n    try {\n      await fetch('http://localhost:8055/api/v1/movies', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          movieTitle: newMovieTitle\n        })\n      });\n\n      // Clear the input field and fetch the updated movie list\n      setNewMovieTitle('');\n      fetchMovies();\n    } catch (error) {\n      console.error('Error adding movie:', error);\n    }\n  };\n  const handleEditMovie = async (id, updatedTitle) => {\n    try {\n      await fetch(`http://localhost:8055/api/v1/movies/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          movieTitle: updatedTitle\n        })\n      });\n\n      // Fetch the updated movie list\n      fetchMovies();\n    } catch (error) {\n      console.error('Error updating movie:', error);\n    }\n  };\n  const handleDeleteMovie = async id => {\n    try {\n      await fetch(`http://localhost:8055/api/v1/movies/${id}`, {\n        method: 'DELETE'\n      });\n\n      // Fetch the updated movie list\n      fetchMovies();\n    } catch (error) {\n      console.error('Error deleting movie:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [movie.movieTitle, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditMovie(movie.movieId, prompt('Enter new title:', movie.movieTitle)),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteMovie(movie.movieId.timestamp),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMovieTitle,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddMovie,\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieList, \"pXV4GJg+mNPFKzm+xyd3VRRpWqY=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","newMovieTitle","setNewMovieTitle","fetchMovies","response","fetch","data","json","error","console","handleInputChange","event","target","value","handleAddMovie","method","headers","body","JSON","stringify","movieTitle","handleEditMovie","id","updatedTitle","handleDeleteMovie","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","index","onClick","movieId","prompt","timestamp","type","onChange","_c","$RefreshReg$"],"sources":["/Users/tiberiugutu/Desktop/Winter Semester Files/Middleware Project/Frontend/src/components/MoviesList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst MovieList = () => {\n    const [movies, setMovies] = useState([]);\n    const [newMovieTitle, setNewMovieTitle] = useState('');\n\n    useEffect(() => {\n        // Fetch movies when the component mounts\n        fetchMovies();\n    }, []);\n\n    const fetchMovies = async () => {\n        try {\n            const response = await fetch('http://localhost:8055/api/v1/movies');\n            const data = await response.json();\n            setMovies(data);\n        } catch (error) {\n            console.error('Error fetching movies:', error);\n        }\n    };\n\n    const handleInputChange = (event) => {\n        setNewMovieTitle(event.target.value);\n    };\n\n    const handleAddMovie = async () => {\n        try {\n            await fetch('http://localhost:8055/api/v1/movies', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ movieTitle: newMovieTitle }),\n            });\n\n            // Clear the input field and fetch the updated movie list\n            setNewMovieTitle('');\n            fetchMovies();\n        } catch (error) {\n            console.error('Error adding movie:', error);\n        }\n    };\n\n    const handleEditMovie = async (id, updatedTitle) => {\n        try {\n            await fetch(`http://localhost:8055/api/v1/movies/${id}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ movieTitle: updatedTitle }),\n            });\n\n            // Fetch the updated movie list\n            fetchMovies();\n        } catch (error) {\n            console.error('Error updating movie:', error);\n        }\n    };\n\n    const handleDeleteMovie = async (id) => {\n        try {\n            await fetch(`http://localhost:8055/api/v1/movies/${id}`, {\n                method: 'DELETE',\n            });\n\n            // Fetch the updated movie list\n            fetchMovies();\n        } catch (error) {\n            console.error('Error deleting movie:', error);\n        }\n    };\n\n\n    return (\n        <div>\n            <h2>Movies</h2>\n            <ul>\n                {movies.map((movie, index) => (\n                    <li key={index}>\n                        {movie.movieTitle}\n                        <button onClick={() => handleEditMovie(movie.movieId, prompt('Enter new title:', movie.movieTitle))}>\n                            Edit\n                        </button>\n                        <button onClick={() => handleDeleteMovie(movie.movieId.timestamp)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n            <div>\n                <input type=\"text\" value={newMovieTitle} onChange={handleInputChange} />\n                <button onClick={handleAddMovie}>Add Movie</button>\n            </div>\n        </div>\n    );\n};\n\nexport default MovieList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}